openapi: 3.0.0
info:
  title: Character API
  description: API documentation for managing characters
  version: 1.0.0
paths:
  /characters:
    post:
      summary: Create a new character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                race:
                  type: string
                classId:
                  type: string
              required:
                - name
                - race
                - classId
      responses:
        '200':
          description: Character created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '400':
          description: Invalid request body or missing required fields
    get:
      summary: Get all characters
      responses:
        '200':
          description: List of characters retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'
        '500':
          description: Internal server error

  '/characters/{id}':
    get:
      summary: Get character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Character retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character not found

    put:
      summary: Update character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: character
          required: true
          description: The updated character object
          schema:
            type: object
            properties:
              name:
                type: string
              race:
                type: string
              classId:
                type: string
              hp:
                type: integer
              ac:
                type: integer
      responses:
        '200':
          description: Character updated successfully
        '404':
          description: Character not found

    delete:
      summary: Delete character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Character deleted successfully
        '404':
          description: Character not found

  /wizards:
    post:
      summary: Create a new wizard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                race:
                  type: string
                classId:
                  type: string
              required:
                - name
                - race
                - classId
      responses:
        '200':
          description: Wizard created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '400':
          description: Invalid request body or missing required fields
    get:
      summary: Get all wizards
      responses:
        '200':
          description: List of wizards retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wizard'
        '500':
          description: Internal server error

  '/wizards/{id}':
    get:
      summary: Get wizard by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wizard retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '404':
          description: Wizard not found

    put:
      summary: Update wizard by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: wizard
          required: true
          description: The updated wizard object
          schema:
            type: object
            properties:
              name:
                type: string
              race:
                type: string
              classId:
                type: string
              hp:
                type: integer
              maxHp:
                type: integer
              ac:
                type: integer
              mana:
                type: integer
              maxMana:
                type: integer
              spells:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Wizard updated successfully
        '404':
          description: Wizard not found

    delete:
      summary: Delete wizard by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wizard deleted successfully
        '404':
          description: Wizard not found

  '/wizards/{id}/restore-mana':
    post:
      summary: Restore mana for a wizard
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Mana restored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '404':
          description: Wizard or mana potion not found

  '/wizards/{id}/add-spell':
    post:
      summary: Add a spell to a wizard
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                spellId:
                  type: string
      responses:
        '200':
          description: Spell added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '404':
          description: Wizard or spell not found

  '/characters/{id}/heal':
    post:
      summary: Heal a character
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                healAmount:
                  type: integer
      responses:
        '200':
          description: Character healed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character or healing potion not found

  '/characters/attack':
    post:
      summary: Attack a character
      parameters:
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attackerId:
                  type: string
                targetId:
                  type: string
                weaponId:
                  type: string
      responses:
        '200':
          description: Attack executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character or target not found
  
  '/characters/potions/{characterId}/{potionId}':
    post:
      summary: Add a potion to a character
      parameters:
        - in: path
          name: characterId
          required: true
          schema:
            type: string
          description: The ID of the character
        - in: path
          name: potionId
          required: true
          schema:
            type: string
          description: The ID of the potion to add
      responses:
        '200':
          description: Potion added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character or potion not found

  '/characters/weapons/{characterId}/{weaponId}':
    post:
      summary: Add a weapon to a character
      parameters:
        - in: path
          name: characterId
          required: true
          schema:
            type: string
          description: The ID of the character to add the weapon to
        - in: path
          name: weaponId
          required: true
          schema:
            type: string
          description: The ID of the weapon to add
      responses:
        '200':
          description: Weapon added to character successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character or Weapon not found

  '/characters/gears/{characterId}/{gearId}':
    post:
      summary: Add gear to a character
      parameters:
        - in: path
          name: characterId
          required: true
          schema:
            type: string
          description: The ID of the character to add the gear to
        - in: path
          name: gearId
          required: true
          schema:
            type: string
          description: The ID of the gear to add
      responses:
        '200':
          description: Gear added to character successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character or Gear not found


  /classes:
    post:
      summary: Create a new class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                attributes:
                  type: object
                  properties:
                    strength:
                      type: integer
                    dexterity:
                      type: integer
                    intelligence:
                      type: integer
                    charisma:
                      type: integer
              required:
                - name
      responses:
        '200':
          description: Class created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Invalid request body or missing required fields
    get:
      summary: Get all classes
      responses:
        '200':
          description: List of classes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '500':
          description: Internal server error

  '/classes/{id}':
    get:
      summary: Get class by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Class retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '404':
          description: Class not found

    put:
      summary: Update class by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: class
          required: true
          description: The updated class object
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              attributes:
                type: object
                properties:
                  strength:
                    type: integer
                  dexterity:
                    type: integer
                  intelligence:
                    type: integer
                  charisma:
                    type: integer
      responses:
        '200':
          description: Class updated successfully
        '404':
          description: Class not found

    delete:
      summary: Delete class by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Class deleted successfully
        '404':
          description: Class not found
  
  /potions:
    post:
      summary: Create a new potion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                effects:
                  type: object
                  properties:
                    hpRestore:
                      type: integer
                    manaRestore:
                      type: integer
                    increaseDamage:
                      type: integer
                utility:
                  type: string
              required:
                - name
                - effects
                - utility
      responses:
        '200':
          description: Potion created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Potion'
        '400':
          description: Invalid request body or missing required fields

    get:
      summary: Get all potions
      responses:
        '200':
          description: List of potions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Potion'
        '500':
          description: Internal server error

  '/potions/{id}':
    get:
      summary: Get potion by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Potion retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Potion'
        '404':
          description: Potion not found

    put:
      summary: Update potion by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: potion
          required: true
          description: The updated potion object
          schema:
            type: object
            properties:
              name:
                type: string
              effects:
                type: object
                properties:
                  hpRestore:
                    type: integer
                  manaRestore:
                    type: integer
                  increaseDamage:
                    type: integer
              utility:
                type: string
      responses:
        '200':
          description: Potion updated successfully
        '404':
          description: Potion not found

    delete:
      summary: Delete potion by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Potion deleted successfully
        '404':
          description: Potion not found
  /weapons:
    post:
      summary: Create a new weapon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                damage:
                  type: integer
              required:
                - name
                - category
                - damage
      responses:
        '201':
          description: Weapon created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weapon'
        '400':
          description: Bad request

    get:
      summary: Get all weapons
      responses:
        '200':
          description: A list of weapons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weapon'

  /weapons/{id}:
    get:
      summary: Get a weapon by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the weapon to retrieve
      responses:
        '200':
          description: Weapon found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weapon'
        '404':
          description: Weapon not found

    put:
      summary: Update a weapon by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: weapon
          required: true
          description: The updated weapon object
          schema:
            type: object
            properties:
              name:
                type: string
              category:
                type: string
              damage:
                type: integer
      responses:
        '200':
          description: Weapon updated successfully
        '404':
          description: Weapon not found

    delete:
      summary: Delete a weapon by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the weapon to delete
      responses:
        '200':
          description: Weapon deleted successfully
        '404':
          description: Weapon not found

  /gears:
    post:
      summary: Create a new gear
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                armour: 
                  type: integer
              required:
                - name
                - category
                - armour
      responses:
        '201':
          description: Gear created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gear'
        '400':
          description: Bad request

    get:
      summary: Get all gears
      responses:
        '200':
          description: A list of gears
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gear'

  /gears/{id}:
    get:
      summary: Get a gear by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the gear to retrieve
      responses:
        '200':
          description: Gear found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gear'
        '404':
          description: Gear not found

    put:
      summary: Update a gear by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: gear
          required: true
          description: The updated gear object
          schema:
            type: object
            properties:
              name:
                type: string
              category:
                type: string
              armour:
                type: integer
      responses:
        '200':
          description: Gear updated successfully
        '404':
          description: Gear not found

    delete:
      summary: Delete a gear by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the gear to delete
      responses:
        '200':
          description: Gear deleted successfully
        '404':
          description: Gear not found
  
  /spells:
    get:
      summary: Retrieve all spells
      responses:
        '200':
          description: A list of spells
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Spell'
    post:
      summary: Create a new spell
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spell'
      responses:
        '201':
          description: Spell created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spell'
        '400':
          description: Invalid input
          
  /spells/{id}:
    get:
      summary: Retrieve a spell by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Spell details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spell'
        '404':
          description: Spell not found
          
    put:
      summary: Update a spell by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spell'
      responses:
        '200':
          description: Spell updated successfully
        '404':
          description: Spell not found
        '400':
          description: Invalid input
          
    delete:
      summary: Delete a spell by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Spell deleted successfully
        '404':
          description: Spell not found

components:
  schemas:
    Character:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        race:
          type: string
        classId:
          type: string
        hp:
          type: integer
        maxHp:
          type: integer
        ac:
          type: integer

    Wizard:
      allOf:
        - $ref: '#/components/schemas/Character'
        - type: object
          properties:
            mana:
              type: integer
            maxMana:
              type: integer

    Class:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        attributes:
          type: object
          properties:
            strength:
              type: integer
            dexterity:
              type: integer
            intelligence:
              type: integer
            charisma:
              type: integer

    Potion:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        effects:
          type: object
          properties:
            hpRestore:
              type: integer
            manaRestore:
              type: integer
            increaseDamage:
              type: integer
          required:
            - hpRestore
        utility:
          type: string

    Weapon:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        damage:
          type: integer     

    Gear:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        armour:
          type: integer

    Spell:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          example: 'Fireball'
        description:
          type: string
          example: 'A blazing fireball that deals damage to enemies.'
        manaCost:
          type: number
          example: 50
        damage:
          type: number
          example: 100
        duration:
          type: number
          example: 5
        


