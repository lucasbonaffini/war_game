openapi: 3.0.0
info:
  title: Character API
  description: API documentation for managing characters
  version: 1.0.0
paths:
  /characters:
    post:
      summary: Create a new character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                race:
                  type: string
                classId:
                  type: string
              required:
                - name
                - race
                - classId
      responses:
        '200':
          description: Character created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '400':
          description: Invalid request body or missing required fields
    get:
      summary: Get all characters
      responses:
        '200':
          description: List of characters retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'
        '500':
          description: Internal server error

  '/characters/{id}':
    get:
      summary: Get character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Character retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character not found

    put:
      summary: Update character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: character
          required: true
          description: The updated character object
          schema:
            type: object
            properties:
              name:
                type: string
              race:
                type: string
              classId:
                type: string
              hp:
                type: integer
              ac:
                type: integer
      responses:
        '200':
          description: Character updated successfully
        '404':
          description: Character not found

    delete:
      summary: Delete character by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Character deleted successfully
        '404':
          description: Character not found

  /wizards:
    post:
      summary: Create a new wizard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                race:
                  type: string
                classId:
                  type: string
                hp:
                  type: integer
                maxHp:
                  type: integer
                ac:
                  type: integer
                mana:
                  type: integer
                maxMana:
                  type: integer
              required:
                - name
                - race
                - classId
      responses:
        '200':
          description: Wizard created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '400':
          description: Invalid request body or missing required fields
    get:
      summary: Get all wizards
      responses:
        '200':
          description: List of wizards retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wizard'
        '500':
          description: Internal server error

  '/wizards/{id}':
    get:
      summary: Get wizard by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wizard retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '404':
          description: Wizard not found

    put:
      summary: Update wizard by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: wizard
          required: true
          description: The updated wizard object
          schema:
            type: object
            properties:
              name:
                type: string
              race:
                type: string
              classId:
                type: string
              hp:
                type: integer
              maxHp:
                type: integer
              ac:
                type: integer
              mana:
                type: integer
              maxMana:
                type: integer
              spells:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Wizard updated successfully
        '404':
          description: Wizard not found

    delete:
      summary: Delete wizard by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Wizard deleted successfully
        '404':
          description: Wizard not found

  '/wizards/{id}/restore-mana':
    post:
      summary: Restore mana for a wizard
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Mana restored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '404':
          description: Wizard or mana potion not found

  '/wizards/{id}/add-spell':
    post:
      summary: Add a spell to a wizard
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                spellId:
                  type: string
      responses:
        '200':
          description: Spell added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wizard'
        '404':
          description: Wizard or spell not found

  '/characters/{id}/heal':
    post:
      summary: Heal a character
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                healAmount:
                  type: integer
      responses:
        '200':
          description: Character healed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character or healing potion not found

  '/characters/{id}/attack':
    post:
      summary: Attack a character
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetId:
                  type: string
                attackPower:
                  type: integer
      responses:
        '200':
          description: Attack executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character or target not found

  /classes:
    post:
      summary: Create a new class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                attributes:
                  type: object
                  properties:
                    strength:
                      type: integer
                    dexterity:
                      type: integer
                    intelligence:
                      type: integer
                    charisma:
                      type: integer
              required:
                - name
      responses:
        '200':
          description: Class created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Invalid request body or missing required fields
    get:
      summary: Get all classes
      responses:
        '200':
          description: List of classes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '500':
          description: Internal server error

  '/classes/{id}':
    get:
      summary: Get class by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Class retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '404':
          description: Class not found

    put:
      summary: Update class by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: body
          name: class
          required: true
          description: The updated class object
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              attributes:
                type: object
                properties:
                  strength:
                    type: integer
                  dexterity:
                    type: integer
                  intelligence:
                    type: integer
                  charisma:
                    type: integer
      responses:
        '200':
          description: Class updated successfully
        '404':
          description: Class not found

    delete:
      summary: Delete class by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Class deleted successfully
        '404':
          description: Class not found

components:
  schemas:
    Character:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        race:
          type: string
        classId:
          type: string
        hp:
          type: integer
        ac:
          type: integer

    Wizard:
      allOf:
        - $ref: '#/components/schemas/Character'
        - type: object
          properties:
            mana:
              type: integer
            maxMana:
              type: integer
            spells:
              type: array
              items:
                type: string

    Class:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        attributes:
          type: object
          properties:
            strength:
              type: integer
            dexterity:
              type: integer
            intelligence:
              type: integer
            charisma:
              type: integer




